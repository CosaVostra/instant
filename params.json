{"name":"Instant","tagline":"!nstant allows newsroom reporters and editors to do what they do best: curate valuable content and relevant voices. On !nstant, timelines and temporary follow lists are easy to create and easy to find.","body":"![Image of Instant](http://www.createinstant.com/images/logo2.png)\r\n\r\n## Why ?\r\n\r\nDuring a breaking news situation, the volume of information on social media can be overwhelming for anyone. Hashtags may be ineffective and lists are not frequently updated or easily accessible. Valuable content is out there - it’s just **hard to find**. \r\n\r\n### !nstant helps you identify experts and witnesses on the ground and share that information on a large scale.\r\n\r\nTest our live demo now on \r\n\r\n## !nstant for Publishers\r\n\r\n!nstant allows newsroom reporters and editors to do what they do best: curate valuable content and relevant voices. On !nstant, timelines and temporary follow lists are easy to create and easy to find.\r\n\r\nAnyone can be a publisher on !nstant: Users display their expertise around breaking news moments. Publishers choose the most reliable voices, add their own posts, create timelines, contextualize information and share your points of view. All of this in a platform designed to work easily and quickly, and focused on the place where most users are consuming the news nowadays: on mobile. \r\n!nstant for Users\r\n\r\nFind Twitter information that has been already selected and organized in a platform designed to isolate what’s important and look for valuable sources. !nstant offers quick and easy access to different curated lists around a story. Choose between specific !nstant timelines created by journalists, editors, experts and general users--without altering your regular followers. Unfollow the list after the news event--your Twitter follower list never changes.\r\n\r\nTo create an !nstant, sign in with your Twitter account at www.createinstant.com. To build your timeline, look for interesting accounts in the \"Who to follow\" column or through key words in the \"Tweets\" column. A third column serves as a final filter: making sure only relevant tweets will show up in your !nstant timeline. Your final !nstant timeline will be the sum of filtered tweets from recommended accounts and the messages specially selected by you.\r\n\r\nAs your !nstant is published, followed accounts will be notified that they have been selected as a recommended source for an event.\r\n\r\n\r\n\r\n\r\n# Install notes and guide\r\n\r\n\r\n## Symfony\r\n\r\n- [ ] Execute : `cp app/config/parameters.yml.dist app/config/parameters.yml`\r\n\r\n- [ ] Execute : `cp app/config/config.yml.dist app/config/config.yml`\r\n\r\n- [ ] Edit app/config/parameters.yml as well as app/config/config.yml\r\n\r\n- [ ] Execute : `php composer.phar install`\r\n\r\n- [ ] Edit vendor/friendsofsymfony/twitter-bundle/FOS/TwitterBundle/Security/Authentication/Provider/TwitterProvider.php (line 77) => delete second `param (null) -> \"throw new AuthenticationException($failed->getMessage(), $failed->getCode(), $failed)\"`\r\n\r\n- [ ] Edit vendor/friendsofsymfony/twitter-bundle/FOS/TwitterBundle/Security/Authentication/Provider/TwitterProvider.php (line 108) => add the following lines : \r\n` $user->setLoginCount($user->getLoginCount()+1);\r\n$this->userProvider->updateUser($user);`\r\n\r\n- [ ] Edit vendor/friendsofsymfony/twitter-bundle/FOS/TwitterBundle/Security/Authentication/Provider/TwitterProvider.php (lines 91 and 95) => replace $accessToken['screen_name'] by $accessToken['user_id'] :\r\n```\r\n91:            return new TwitterUserToken($accessToken['user_id'], null, array('ROLE_TWITTER_USER'));\r\n92:        }\r\n93:\r\n94:        try {\r\n95:            $user = $this->userProvider->loadUserByUsername($accessToken['user_id']);\r\n```\r\n- [ ] Execute : `app/console doctrine:schema:create`\r\n\r\n(optional)\r\n- [ ] Execute the root command : `chmod -R 777 app/cache/ app/logs/`\r\n(you might have to run `rm -rf app/cache/*` )\r\n\r\nII) Chapitre 140dev (Framework pour Twitter Streaming API) :\r\n\r\nII-1 Executer : cp 140dev/db/140dev_config.php.dist 140dev/db/140dev_config.php\r\nEditer le 140dev/db/140dev_config.php; spécifier les données de l'appli Twitter ainsi que l'adresse email où seront envoyés les logs\r\n\r\nII-2 Executer : cp 140dev/db/db_config.php.dist 140dev/db/db_config.php\r\nEditer le 140dev/db/db_config.php; spécifier le paramétrage de la base de données\r\n\r\nII-3 Créer la table json_cache (code dans le fichier 140dev/db/mysql_database_schema.sql)\r\n\r\nII-4 Planifier le script php 140dev/db/garbage_tweet.php qui nettoie la table Tweet des tweet \"orphelins\" (ils sont nombreux car Twitter nous envoie tous les RT des tweets de nos twittos). A planifier toutes les heures par exemple.\r\n\r\nIII) Chapitre MySQL\r\n\r\nIII-1 Créer la procédure et le trigger permettant d'alimenter les instant avec les tweets qui arrivent de la streaming API : le code à lancer se trouve dans trigger.sql\r\n\r\n\r\n\r\n\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and we’ll help you sort it out.","google":"UA-49875688-2","note":"Don't delete this file! It's used internally to help with page regeneration."}