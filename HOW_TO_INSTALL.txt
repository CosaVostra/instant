I) Chapitre Symfony

I-1 Executer : cp app/config/parameters.yml.dist app/config/parameters.yml
cp app/config/config.yml.dist app/config/config.yml

I-2 Editer le app/config/parameters.yml ainsi que le app/config/config.yml

I-3 Executer : php composer.phar install

I-4 Editer le vendor/friendsofsymfony/twitter-bundle/FOS/TwitterBundle/Security/Authentication/Provider/TwitterProvider.php à la ligne 77; supprimer le second param (null) -> "throw new AuthenticationException($failed->getMessage(), $failed->getCode(), $failed);"

I-5 Editer le vendor/friendsofsymfony/twitter-bundle/FOS/TwitterBundle/Security/Authentication/Provider/TwitterProvider.php à la ligne 108; ajouter les lignes suivantes (avant le return) :

| $user->setLoginCount($user->getLoginCount()+1);
| $this->userProvider->updateUser($user);

I-6 Editer le vendor/friendsofsymfony/twitter-bundle/FOS/TwitterBundle/Security/Authentication/Provider/TwitterProvider.php aux lignes 91 et 95; remplacer $accessToken['screen_name'] par $accessToken['user_id'] :

91:            return new TwitterUserToken($accessToken['user_id'], null, array('ROLE_TWITTER_USER'));
92:        }
93:
94:        try {
95:            $user = $this->userProvider->loadUserByUsername($accessToken['user_id']);

I-7 Executer : app/console doctrine:schema:create

(optionnel)
I-101 Executer en root : chmod -R 777 app/cache/ app/logs/
Peut-etre sera-t-il necessaire de faire rm -rf app/cache/*

II) Chapitre 140dev (Framework pour Twitter Streaming API) :

II-1 Executer : cp 140dev/db/140dev_config.php.dist 140dev/db/140dev_config.php
Editer le 140dev/db/140dev_config.php; spécifier les données de l'appli Twitter ainsi que l'adresse email où seront envoyés les logs

II-2 Executer : cp 140dev/db/db_config.php.dist 140dev/db/db_config.php
Editer le 140dev/db/db_config.php; spécifier le paramétrage de la base de données

II-3 Créer la table json_cache (code dans le fichier 140dev/db/mysql_database_schema.sql)

II-4 Planifier le script php 140dev/db/garbage_tweet.php qui nettoie la table Tweet des tweet "orphelins" (ils sont nombreux car Twitter nous envoie tous les RT des tweets de nos twittos). A planifier toutes les heures par exemple.

III) Chapitre MySQL

III-1 Créer la procédure et le trigger permettant d'alimenter les instant avec les tweets qui arrivent de la streaming API : le code à lancer se trouve dans trigger.sql

